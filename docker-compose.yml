version: "3.8"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: gamesdb
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
      - db-data:/var/lib/postgresql/data
    networks:
      - backend

  api:
    build:
      context: ./
      dockerfile: api/Dockerfile
    ports:
      - "${INTERNAL_API_PORT}:${INTERNAL_API_PORT}"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/gamesdb
      INTERNAL_API_PORT: ${INTERNAL_API_PORT}
      INTERNAL_API_AUTH_TOKEN: ${INTERNAL_API_AUTH_TOKEN}
    depends_on:
      - db
    networks:
      - backend

  scraper:
    build:
      context: ./
      dockerfile: scraper/Dockerfile
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/gamesdb
      INTERNAL_API_URL: http://api:${INTERNAL_API_PORT}
      INTERNAL_API_AUTH_TOKEN: ${INTERNAL_API_AUTH_TOKEN}
    depends_on:
      - api
    networks:
      - backend

  bot:
    build:
      context: ./
      dockerfile: bot/Dockerfile
    environment:
      INTERNAL_API_URL: http://api:${INTERNAL_API_PORT}
      INTERNAL_API_AUTH_TOKEN: ${INTERNAL_API_AUTH_TOKEN}
      TWITTER_ACCESS_TOKEN: ${TWITTER_ACCESS_TOKEN}
      TWITTER_ACCESS_TOKEN_SECRET: ${TWITTER_ACCESS_TOKEN_SECRET}
      TWITTER_API_KEY: ${TWITTER_API_KEY}
      TWITTER_API_KEY_SECRET: ${TWITTER_API_KEY_SECRET}
    depends_on:
      - api
    networks:
      - backend

volumes:
  db-data:

networks:
  backend:
